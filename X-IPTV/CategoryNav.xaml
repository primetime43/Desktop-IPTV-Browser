<UserControl x:Class="X_IPTV.CategoryNav"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:X_IPTV" xmlns:extToolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        d:DesignHeight="450" d:DesignWidth="800" MinHeight="450" MinWidth="800" MaxHeight="450" MaxWidth="800">

    <UserControl.Resources>
        <!-- BusyIndicator Style with Cancel Button -->
        <Style x:Key="BusyIndicatorStyle" TargetType="extToolkit:BusyIndicator">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="extToolkit:BusyIndicator">
                        <Grid>
                            <ContentControl Content="{TemplateBinding Content}" />
                            <Grid x:Name="busyGrid" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed">
                                <Rectangle Fill="White" Opacity="0.75"/>
                                <Border Background="WhiteSmoke" CornerRadius="10" Padding="10">
                                    <StackPanel>
                                        <TextBlock x:Name="busyContent" Text="{TemplateBinding BusyContent}" HorizontalAlignment="Center" VerticalAlignment="Center" TextWrapping="Wrap"/>
                                        <ProgressBar Width="180" Height="15" IsIndeterminate="True" VerticalAlignment="Top" Margin="10,10,10,5"/>
                                        <Button Content="Cancel" Width="80" Height="25" HorizontalAlignment="Center" Click="CancelButton_Click"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsBusy" Value="True">
                                <Setter TargetName="busyGrid" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <extToolkit:BusyIndicator x:Name="busy_ind" IsBusy="False" Style="{StaticResource BusyIndicatorStyle}">
        <Grid Background="LightGray" 
              MaxHeight="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" 
              MaxWidth="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="13*"/>
                <ColumnDefinition Width="12*"/>
                <ColumnDefinition Width="135*"/>
            </Grid.ColumnDefinitions>-->
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <!--<Button x:Name="quitBtn" Content="Quit" Background="White" HorizontalAlignment="Left" Height="45" Margin="530,354,0,0" VerticalAlignment="Top" Width="115" Click="quitBtn_Click" Grid.Column="2"/>
            <Button x:Name="backToLoginBtn" Content="Back to Login" Background="White" HorizontalAlignment="Left" Height="45" Margin="530,297,0,0" VerticalAlignment="Top" Width="115" Click="backToLoginBtn_Click" Grid.Column="2"/>-->
            <!--<ListView x:Name="listViewTest" d:ItemsSource="{d:SampleData ItemCount=5}" Grid.ColumnSpan="3" SelectionChanged="ListViewItem_Selected">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel>
                            <TextBlock Text="{Binding CategoryName}" FontWeight="Bold"/>
                        </WrapPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>-->
            <!--<RichTextBox x:Name="userInfoTxtBox" Grid.Column="2" Margin="337,21,45,217" ScrollViewer.VerticalScrollBarVisibility="Auto">
                <FlowDocument>
                    <Paragraph>
                        <Run Text="RichTextBox"/>
                    </Paragraph>
                </FlowDocument>
            </RichTextBox>
            <Button x:Name="updateEpgBtn" Grid.Column="2" Content="Update EPG" Background="White" HorizontalAlignment="Left" Margin="10" VerticalAlignment="Top" Height="45" Width="115" Click="updateEpgBtn_Click"/>-->
            <!-- Buttons and RichTextBox -->

            <!-- ListView -->
            <ListView x:Name="listViewTest" Grid.Column="0" HorizontalAlignment="Left" MaxWidth="300"
                  Height="{Binding Path=ActualHeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}}"
                  Margin="5">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <WrapPanel>
                            <TextBlock Text="{Binding CategoryName}" FontWeight="Bold"/>
                        </WrapPanel>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!-- RichTextBox in second column -->
            <RichTextBox x:Name="userInfoTxtBox" Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Top" MaxWidth="300" MinHeight="100" MaxHeight="300" Margin="10" ScrollViewer.VerticalScrollBarVisibility="Auto"/>

            <!-- Controls in third column -->
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10">
                <Button x:Name="quitBtn" Content="Quit" Background="White" Height="45" Width="115" Click="quitBtn_Click" Margin="0,0,10,0"/>
                <Button x:Name="backToLoginBtn" Content="Back to Login" Background="White" Height="45" Width="115" Click="backToLoginBtn_Click" Margin="0,0,10,0"/>
                <Button x:Name="updateEpgBtn" Content="Update EPG" Background="White" Height="45" Width="115" Click="updateEpgBtn_Click"/>
            </StackPanel>
        </Grid>
    </extToolkit:BusyIndicator>
</UserControl>
